// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MeetingService.proto

package schedulePro.meeting;

/**
 * Protobuf type {@code schedulePro.meeting.ScheduleMeetingRequest}
 */
public  final class ScheduleMeetingRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:schedulePro.meeting.ScheduleMeetingRequest)
    ScheduleMeetingRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ScheduleMeetingRequest.newBuilder() to construct.
  private ScheduleMeetingRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ScheduleMeetingRequest() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ScheduleMeetingRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            schedulePro.meeting.Meeting.Builder subBuilder = null;
            if (meeting_ != null) {
              subBuilder = meeting_.toBuilder();
            }
            meeting_ = input.readMessage(schedulePro.meeting.Meeting.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(meeting_);
              meeting_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return schedulePro.meeting.MeetingServiceOuterClass.internal_static_schedulePro_meeting_ScheduleMeetingRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return schedulePro.meeting.MeetingServiceOuterClass.internal_static_schedulePro_meeting_ScheduleMeetingRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            schedulePro.meeting.ScheduleMeetingRequest.class, schedulePro.meeting.ScheduleMeetingRequest.Builder.class);
  }

  public static final int MEETING_FIELD_NUMBER = 1;
  private schedulePro.meeting.Meeting meeting_;
  /**
   * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
   */
  public boolean hasMeeting() {
    return meeting_ != null;
  }
  /**
   * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
   */
  public schedulePro.meeting.Meeting getMeeting() {
    return meeting_ == null ? schedulePro.meeting.Meeting.getDefaultInstance() : meeting_;
  }
  /**
   * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
   */
  public schedulePro.meeting.MeetingOrBuilder getMeetingOrBuilder() {
    return getMeeting();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (meeting_ != null) {
      output.writeMessage(1, getMeeting());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (meeting_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMeeting());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof schedulePro.meeting.ScheduleMeetingRequest)) {
      return super.equals(obj);
    }
    schedulePro.meeting.ScheduleMeetingRequest other = (schedulePro.meeting.ScheduleMeetingRequest) obj;

    boolean result = true;
    result = result && (hasMeeting() == other.hasMeeting());
    if (hasMeeting()) {
      result = result && getMeeting()
          .equals(other.getMeeting());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMeeting()) {
      hash = (37 * hash) + MEETING_FIELD_NUMBER;
      hash = (53 * hash) + getMeeting().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schedulePro.meeting.ScheduleMeetingRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(schedulePro.meeting.ScheduleMeetingRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code schedulePro.meeting.ScheduleMeetingRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:schedulePro.meeting.ScheduleMeetingRequest)
      schedulePro.meeting.ScheduleMeetingRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return schedulePro.meeting.MeetingServiceOuterClass.internal_static_schedulePro_meeting_ScheduleMeetingRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return schedulePro.meeting.MeetingServiceOuterClass.internal_static_schedulePro_meeting_ScheduleMeetingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              schedulePro.meeting.ScheduleMeetingRequest.class, schedulePro.meeting.ScheduleMeetingRequest.Builder.class);
    }

    // Construct using schedulePro.meeting.ScheduleMeetingRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (meetingBuilder_ == null) {
        meeting_ = null;
      } else {
        meeting_ = null;
        meetingBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return schedulePro.meeting.MeetingServiceOuterClass.internal_static_schedulePro_meeting_ScheduleMeetingRequest_descriptor;
    }

    @java.lang.Override
    public schedulePro.meeting.ScheduleMeetingRequest getDefaultInstanceForType() {
      return schedulePro.meeting.ScheduleMeetingRequest.getDefaultInstance();
    }

    @java.lang.Override
    public schedulePro.meeting.ScheduleMeetingRequest build() {
      schedulePro.meeting.ScheduleMeetingRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public schedulePro.meeting.ScheduleMeetingRequest buildPartial() {
      schedulePro.meeting.ScheduleMeetingRequest result = new schedulePro.meeting.ScheduleMeetingRequest(this);
      if (meetingBuilder_ == null) {
        result.meeting_ = meeting_;
      } else {
        result.meeting_ = meetingBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof schedulePro.meeting.ScheduleMeetingRequest) {
        return mergeFrom((schedulePro.meeting.ScheduleMeetingRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(schedulePro.meeting.ScheduleMeetingRequest other) {
      if (other == schedulePro.meeting.ScheduleMeetingRequest.getDefaultInstance()) return this;
      if (other.hasMeeting()) {
        mergeMeeting(other.getMeeting());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      schedulePro.meeting.ScheduleMeetingRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (schedulePro.meeting.ScheduleMeetingRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private schedulePro.meeting.Meeting meeting_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        schedulePro.meeting.Meeting, schedulePro.meeting.Meeting.Builder, schedulePro.meeting.MeetingOrBuilder> meetingBuilder_;
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public boolean hasMeeting() {
      return meetingBuilder_ != null || meeting_ != null;
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public schedulePro.meeting.Meeting getMeeting() {
      if (meetingBuilder_ == null) {
        return meeting_ == null ? schedulePro.meeting.Meeting.getDefaultInstance() : meeting_;
      } else {
        return meetingBuilder_.getMessage();
      }
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public Builder setMeeting(schedulePro.meeting.Meeting value) {
      if (meetingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        meeting_ = value;
        onChanged();
      } else {
        meetingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public Builder setMeeting(
        schedulePro.meeting.Meeting.Builder builderForValue) {
      if (meetingBuilder_ == null) {
        meeting_ = builderForValue.build();
        onChanged();
      } else {
        meetingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public Builder mergeMeeting(schedulePro.meeting.Meeting value) {
      if (meetingBuilder_ == null) {
        if (meeting_ != null) {
          meeting_ =
            schedulePro.meeting.Meeting.newBuilder(meeting_).mergeFrom(value).buildPartial();
        } else {
          meeting_ = value;
        }
        onChanged();
      } else {
        meetingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public Builder clearMeeting() {
      if (meetingBuilder_ == null) {
        meeting_ = null;
        onChanged();
      } else {
        meeting_ = null;
        meetingBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public schedulePro.meeting.Meeting.Builder getMeetingBuilder() {
      
      onChanged();
      return getMeetingFieldBuilder().getBuilder();
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    public schedulePro.meeting.MeetingOrBuilder getMeetingOrBuilder() {
      if (meetingBuilder_ != null) {
        return meetingBuilder_.getMessageOrBuilder();
      } else {
        return meeting_ == null ?
            schedulePro.meeting.Meeting.getDefaultInstance() : meeting_;
      }
    }
    /**
     * <code>.schedulePro.meeting.Meeting meeting = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schedulePro.meeting.Meeting, schedulePro.meeting.Meeting.Builder, schedulePro.meeting.MeetingOrBuilder> 
        getMeetingFieldBuilder() {
      if (meetingBuilder_ == null) {
        meetingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schedulePro.meeting.Meeting, schedulePro.meeting.Meeting.Builder, schedulePro.meeting.MeetingOrBuilder>(
                getMeeting(),
                getParentForChildren(),
                isClean());
        meeting_ = null;
      }
      return meetingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:schedulePro.meeting.ScheduleMeetingRequest)
  }

  // @@protoc_insertion_point(class_scope:schedulePro.meeting.ScheduleMeetingRequest)
  private static final schedulePro.meeting.ScheduleMeetingRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new schedulePro.meeting.ScheduleMeetingRequest();
  }

  public static schedulePro.meeting.ScheduleMeetingRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ScheduleMeetingRequest>
      PARSER = new com.google.protobuf.AbstractParser<ScheduleMeetingRequest>() {
    @java.lang.Override
    public ScheduleMeetingRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ScheduleMeetingRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ScheduleMeetingRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ScheduleMeetingRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public schedulePro.meeting.ScheduleMeetingRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

